package kz.paysoft.paymobile.ui.security.model.entities;

import kz.paysoft.paymobile.ui.adfextensions.ExtendedEntityImpl;

import kz.paysoft.paymobile.ui.security.model.MessageBundle;

import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun May 30 08:37:40 BDST 2010
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class BranchImpl extends ExtendedEntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(BranchImpl obj) {
                return obj.getId();
            }

            public void put(BranchImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Status {
            public Object get(BranchImpl obj) {
                return obj.getStatus();
            }

            public void put(BranchImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        Date {
            public Object get(BranchImpl obj) {
                return obj.getDate();
            }

            public void put(BranchImpl obj, Object value) {
                obj.setDate((Date)value);
            }
        }
        ,
        User {
            public Object get(BranchImpl obj) {
                return obj.getUser();
            }

            public void put(BranchImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Name {
            public Object get(BranchImpl obj) {
                return obj.getName();
            }

            public void put(BranchImpl obj, Object value) {
                obj.setName((String)value);
            }
        }
        ,
        ParentId {
            public Object get(BranchImpl obj) {
                return obj.getParentId();
            }

            public void put(BranchImpl obj, Object value) {
                obj.setParentId((Number)value);
            }
        }
        ,
        Hu {
            public Object get(BranchImpl obj) {
                return obj.getHu();
            }

            public void put(BranchImpl obj, Object value) {
                obj.setHu((Number)value);
            }
        }
        ,
        Cid {
            public Object get(BranchImpl obj) {
                return obj.getCid();
            }

            public void put(BranchImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Branch {
            public Object get(BranchImpl obj) {
                return obj.getBranch();
            }

            public void put(BranchImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ParentIdBranch {
            public Object get(BranchImpl obj) {
                return obj.getParentIdBranch();
            }

            public void put(BranchImpl obj, Object value) {
                obj.setParentIdBranch((BranchImpl)value);
            }
        }
        ,
        User1 {
            public Object get(BranchImpl obj) {
                return obj.getUser1();
            }

            public void put(BranchImpl obj, Object value) {
                obj.setUser1((ExtendedEntityImpl)value);
            }
        }
        ,
        UserBranchOfBranch {
            public Object get(BranchImpl obj) {
                return obj.getUserBranchOfBranch();
            }

            public void put(BranchImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SubBranches {
            public Object get(BranchImpl obj) {
                return obj.getSubBranches();
            }

            public void put(BranchImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        /**
         * @param object
         * @return
         */
        public abstract Object get(BranchImpl object);

        /**
         * @param object
         * @param value
         */
        public abstract void put(BranchImpl object, Object value);

        /**
         * @return
         */
        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        /**
         * @return
         */
        public static int firstIndex() {
            return firstIndex;
        }

        /**
         * @return
         */
        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        /**
         * @return
         */
        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int DATE = AttributesEnum.Date.index();
    public static final int USER = AttributesEnum.User.index();
    public static final int NAME = AttributesEnum.Name.index();
    public static final int PARENTID = AttributesEnum.ParentId.index();
    public static final int HU = AttributesEnum.Hu.index();
    public static final int CID = AttributesEnum.Cid.index();
    public static final int BRANCH = AttributesEnum.Branch.index();
    public static final int PARENTIDBRANCH = AttributesEnum.ParentIdBranch.index();
    public static final int USER1 = AttributesEnum.User1.index();
    public static final int USERBRANCHOFBRANCH = AttributesEnum.UserBranchOfBranch.index();
    public static final int SUBBRANCHES = AttributesEnum.SubBranches.index();

    /**
     * This is the default constructor (do not remove).
     */
    public BranchImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("kz.paysoft.paymobile.ui.security.model.entities.Branch");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the Id
     */
    public DBSequence getId() {
        return (DBSequence)getAttributeInternal(ID);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the Status
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for Date, using the alias name Date.
     * @return the Date
     */
    public Date getDate() {
        return (Date)getAttributeInternal(DATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Date.
     * @param value value to set the Date
     */
    public void setDate(Date value) {
        setAttributeInternal(DATE, value);
    }

    /**
     * Gets the attribute value for User, using the alias name User.
     * @return the User
     */
    public String getUser() {
        return (String)getAttributeInternal(USER);
    }

    /**
     * Gets the attribute value for Name, using the alias name Name.
     * @return the Name
     */
    public String getName() {
        return (String)getAttributeInternal(NAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for Name.
     * @param value value to set the Name
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**
     * Gets the attribute value for ParentId, using the alias name ParentId.
     * @return the ParentId
     */
    public Number getParentId() {
        return (Number)getAttributeInternal(PARENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParentId.
     * @param value value to set the ParentId
     */
    public void setParentId(Number value) {
        setAttributeInternal(PARENTID, value);
    }

    /**
     * Gets the attribute value for Hu, using the alias name Hu.
     * @return the Hu
     */
    public Number getHu() {
        return (Number)getAttributeInternal(HU);
    }

    /**
     * Sets <code>value</code> as the attribute value for Hu.
     * @param value value to set the Hu
     */
    public void setHu(Number value) {
        setAttributeInternal(HU, value);
    }

    /**
     * Gets the attribute value for Cid, using the alias name Cid.
     * @return the Cid
     */
    public Number getCid() {
        return (Number)getAttributeInternal(CID);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getBranch() {
        return (RowIterator)getAttributeInternal(BRANCH);
    }

    /**
     * @return the associated entity BranchImpl.
     */
    public BranchImpl getParentIdBranch() {
        return (BranchImpl)getAttributeInternal(PARENTIDBRANCH);
    }

    /**
     * Sets <code>value</code> as the associated entity BranchImpl.
     * @param value
     */
    public void setParentIdBranch(BranchImpl value) {
        setAttributeInternal(PARENTIDBRANCH, value);
    }


    /**
     * @return the associated entity kz.paysoft.paymobile.ui.adfextensions.ExtendedEntityImpl.
     */
    public ExtendedEntityImpl getUser1() {
        return (ExtendedEntityImpl)getAttributeInternal(USER1);
    }

    /**
     * Sets <code>value</code> as the associated entity kz.paysoft.paymobile.ui.adfextensions.ExtendedEntityImpl.
     * @param value
     */
    public void setUser1(ExtendedEntityImpl value) {
        setAttributeInternal(USER1, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getUserBranchOfBranch() {
        return (RowIterator)getAttributeInternal(USERBRANCHOFBRANCH);
    }

    /**
     * Gets the view accessor <code>RowSet</code> SubBranches.
     * @return
     */
    public RowSet getSubBranches() {
        return (RowSet)getAttributeInternal(SUBBRANCHES);
    }


    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(DBSequence id) {
        return new Key(new Object[]{id});
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        RowSet rs = getSubBranches();
        rs.executeQuery();
        if (rs.first() != null) {
            throw new JboException(MessageBundle.class, MessageBundle.SUB_BRANCH_EXISTS, null);
        }
        super.remove();
    }
}
