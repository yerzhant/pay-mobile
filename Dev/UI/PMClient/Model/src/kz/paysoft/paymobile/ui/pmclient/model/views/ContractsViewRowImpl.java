package kz.paysoft.paymobile.ui.pmclient.model.views;

import kz.paysoft.paymobile.ui.pmclient.model.MessageBundle;
import kz.paysoft.paymobile.ui.pmclient.model.entities.ContractImpl;

import kz.paysoft.paymobile.ui.pmclient.model.views.common.ContractsViewRow;

import oracle.jbo.JboException;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Fri Jun 11 08:52:40 BDST 2010
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ContractsViewRowImpl extends ViewRowImpl implements ContractsViewRow {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(ContractsViewRowImpl obj) {
                return obj.getId();
            }

            public void put(ContractsViewRowImpl obj, Object value) {
                obj.setId((DBSequence)value);
            }
        }
        ,
        Date {
            public Object get(ContractsViewRowImpl obj) {
                return obj.getDate();
            }

            public void put(ContractsViewRowImpl obj, Object value) {
                obj.setDate((Date)value);
            }
        }
        ,
        User {
            public Object get(ContractsViewRowImpl obj) {
                return obj.getUser();
            }

            public void put(ContractsViewRowImpl obj, Object value) {
                obj.setUser((String)value);
            }
        }
        ,
        ClientId {
            public Object get(ContractsViewRowImpl obj) {
                return obj.getClientId();
            }

            public void put(ContractsViewRowImpl obj, Object value) {
                obj.setClientId((Number)value);
            }
        }
        ,
        Status {
            public Object get(ContractsViewRowImpl obj) {
                return obj.getStatus();
            }

            public void put(ContractsViewRowImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        }
        ,
        OpenDate {
            public Object get(ContractsViewRowImpl obj) {
                return obj.getOpenDate();
            }

            public void put(ContractsViewRowImpl obj, Object value) {
                obj.setOpenDate((Date)value);
            }
        }
        ,
        AppliedAt {
            public Object get(ContractsViewRowImpl obj) {
                return obj.getAppliedAt();
            }

            public void put(ContractsViewRowImpl obj, Object value) {
                obj.setAppliedAt((Date)value);
            }
        }
        ,
        PhoneNumber {
            public Object get(ContractsViewRowImpl obj) {
                return obj.getPhoneNumber();
            }

            public void put(ContractsViewRowImpl obj, Object value) {
                obj.setPhoneNumber((Number)value);
            }
        }
        ,
        PasswordTries {
            public Object get(ContractsViewRowImpl obj) {
                return obj.getPasswordTries();
            }

            public void put(ContractsViewRowImpl obj, Object value) {
                obj.setPasswordTries((Number)value);
            }
        }
        ,
        CloseDate {
            public Object get(ContractsViewRowImpl obj) {
                return obj.getCloseDate();
            }

            public void put(ContractsViewRowImpl obj, Object value) {
                obj.setCloseDate((Date)value);
            }
        }
        ,
        ANumber {
            public Object get(ContractsViewRowImpl obj) {
                return obj.getANumber();
            }

            public void put(ContractsViewRowImpl obj, Object value) {
                obj.setANumber((String)value);
            }
        }
        ,
        CipherSuite {
            public Object get(ContractsViewRowImpl obj) {
                return obj.getCipherSuite();
            }

            public void put(ContractsViewRowImpl obj, Object value) {
                obj.setCipherSuite((String)value);
            }
        }
        ,
        Si {
            public Object get(ContractsViewRowImpl obj) {
                return obj.getSi();
            }

            public void put(ContractsViewRowImpl obj, Object value) {
                obj.setSi((Number)value);
            }
        }
        ,
        AccountsView {
            public Object get(ContractsViewRowImpl obj) {
                return obj.getAccountsView();
            }

            public void put(ContractsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SrsView {
            public Object get(ContractsViewRowImpl obj) {
                return obj.getSrsView();
            }

            public void put(ContractsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ContractStatus {
            public Object get(ContractsViewRowImpl obj) {
                return obj.getContractStatus();
            }

            public void put(ContractsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Users {
            public Object get(ContractsViewRowImpl obj) {
                return obj.getUsers();
            }

            public void put(ContractsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ContractsViewRowImpl object);

        public abstract void put(ContractsViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int DATE = AttributesEnum.Date.index();
    public static final int USER = AttributesEnum.User.index();
    public static final int CLIENTID = AttributesEnum.ClientId.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int OPENDATE = AttributesEnum.OpenDate.index();
    public static final int APPLIEDAT = AttributesEnum.AppliedAt.index();
    public static final int PHONENUMBER = AttributesEnum.PhoneNumber.index();
    public static final int PASSWORDTRIES = AttributesEnum.PasswordTries.index();
    public static final int CLOSEDATE = AttributesEnum.CloseDate.index();
    public static final int ANUMBER = AttributesEnum.ANumber.index();
    public static final int CIPHERSUITE = AttributesEnum.CipherSuite.index();
    public static final int SI = AttributesEnum.Si.index();
    public static final int ACCOUNTSVIEW = AttributesEnum.AccountsView.index();
    public static final int SRSVIEW = AttributesEnum.SrsView.index();
    public static final int CONTRACTSTATUS = AttributesEnum.ContractStatus.index();
    public static final int USERS = AttributesEnum.Users.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ContractsViewRowImpl() {
    }

    /**
     * Gets Contract entity object.
     * @return the Contract
     */
    public ContractImpl getContract() {
        return (ContractImpl)getEntity(0);
    }


    /**
     * Gets the attribute value for ID$ using the alias name Id.
     * @return the ID$
     */
    public DBSequence getId() {
        return (DBSequence)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID$ using the alias name Id.
     * @param value value to set the ID$
     */
    public void setId(DBSequence value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for DATE$ using the alias name Date.
     * @return the DATE$
     */
    public Date getDate() {
        return (Date)getAttributeInternal(DATE);
    }

    /**
     * Sets <code>value</code> as attribute value for DATE$ using the alias name Date.
     * @param value value to set the DATE$
     */
    public void setDate(Date value) {
        setAttributeInternal(DATE, value);
    }


    /**
     * Gets the attribute value for USER$ using the alias name User.
     * @return the USER$
     */
    public String getUser() {
        return (String) getAttributeInternal(USER);
    }

    /**
     * Sets <code>value</code> as attribute value for USER$ using the alias name User.
     * @param value value to set the USER$
     */
    public void setUser(String value) {
        setAttributeInternal(USER, value);
    }

    /**
     * Gets the attribute value for CLIENT_ID$ using the alias name ClientId.
     * @return the CLIENT_ID$
     */
    public Number getClientId() {
        return (Number)getAttributeInternal(CLIENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for CLIENT_ID$ using the alias name ClientId.
     * @param value value to set the CLIENT_ID$
     */
    public void setClientId(Number value) {
        setAttributeInternal(CLIENTID, value);
    }

    /**
     * Gets the attribute value for STATUS using the alias name Status.
     * @return the STATUS
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as attribute value for STATUS using the alias name Status.
     * @param value value to set the STATUS
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for OPEN_DATE using the alias name OpenDate.
     * @return the OPEN_DATE
     */
    public Date getOpenDate() {
        return (Date)getAttributeInternal(OPENDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for OPEN_DATE using the alias name OpenDate.
     * @param value value to set the OPEN_DATE
     */
    public void setOpenDate(Date value) {
        setAttributeInternal(OPENDATE, value);
    }

    /**
     * Gets the attribute value for APPLIED_AT using the alias name AppliedAt.
     * @return the APPLIED_AT
     */
    public Date getAppliedAt() {
        return (Date)getAttributeInternal(APPLIEDAT);
    }

    /**
     * Sets <code>value</code> as attribute value for APPLIED_AT using the alias name AppliedAt.
     * @param value value to set the APPLIED_AT
     */
    public void setAppliedAt(Date value) {
        setAttributeInternal(APPLIEDAT, value);
    }

    /**
     * Gets the attribute value for PHONE_NUMBER using the alias name PhoneNumber.
     * @return the PHONE_NUMBER
     */
    public Number getPhoneNumber() {
        return (Number)getAttributeInternal(PHONENUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for PHONE_NUMBER using the alias name PhoneNumber.
     * @param value value to set the PHONE_NUMBER
     */
    public void setPhoneNumber(Number value) {
        setAttributeInternal(PHONENUMBER, value);
    }

    /**
     * Gets the attribute value for PASSWORD_TRIES using the alias name PasswordTries.
     * @return the PASSWORD_TRIES
     */
    public Number getPasswordTries() {
        return (Number)getAttributeInternal(PASSWORDTRIES);
    }

    /**
     * Sets <code>value</code> as attribute value for PASSWORD_TRIES using the alias name PasswordTries.
     * @param value value to set the PASSWORD_TRIES
     */
    public void setPasswordTries(Number value) {
        setAttributeInternal(PASSWORDTRIES, value);
    }

    /**
     * Gets the attribute value for CLOSE_DATE using the alias name CloseDate.
     * @return the CLOSE_DATE
     */
    public Date getCloseDate() {
        return (Date)getAttributeInternal(CLOSEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for CLOSE_DATE using the alias name CloseDate.
     * @param value value to set the CLOSE_DATE
     */
    public void setCloseDate(Date value) {
        setAttributeInternal(CLOSEDATE, value);
    }

    /**
     * Gets the attribute value for A_NUMBER using the alias name ANumber.
     * @return the A_NUMBER
     */
    public String getANumber() {
        return (String)getAttributeInternal(ANUMBER);
    }

    /**
     * Sets <code>value</code> as attribute value for A_NUMBER using the alias name ANumber.
     * @param value value to set the A_NUMBER
     */
    public void setANumber(String value) {
        setAttributeInternal(ANUMBER, value);
    }


    /**
     * Gets the attribute value for CIPHER_SUITE using the alias name CipherSuite.
     * @return the CIPHER_SUITE
     */
    public String getCipherSuite() {
        return (String)getAttributeInternal(CIPHERSUITE);
    }

    /**
     * Sets <code>value</code> as attribute value for CIPHER_SUITE using the alias name CipherSuite.
     * @param value value to set the CIPHER_SUITE
     */
    public void setCipherSuite(String value) {
        setAttributeInternal(CIPHERSUITE, value);
    }

    /**
     * Gets the attribute value for SI using the alias name Si.
     * @return the SI
     */
    public Number getSi() {
        return (Number)getAttributeInternal(SI);
    }

    /**
     * Sets <code>value</code> as attribute value for SI using the alias name Si.
     * @param value value to set the SI
     */
    public void setSi(Number value) {
        setAttributeInternal(SI, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link AccountsView.
     */
    public RowIterator getAccountsView() {
        return (RowIterator)getAttributeInternal(ACCOUNTSVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link SrsView.
     */
    public RowIterator getSrsView() {
        return (RowIterator)getAttributeInternal(SRSVIEW);
    }


    /**
     * Gets the view accessor <code>RowSet</code> ContractStatus.
     */
    public RowSet getContractStatus() {
        return (RowSet)getAttributeInternal(CONTRACTSTATUS);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Users.
     */
    public RowSet getUsers() {
        return (RowSet)getAttributeInternal(USERS);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    public void close() {
        if (getStatus().equals("C")) {
            throw new JboException(MessageBundle.class, MessageBundle.CONTRACT_ALREADY_CLOSED, null);
        }
        setStatus("C");
        setCloseDate(new Date(Date.getCurrentDate()));
    }

    public void check() {
        setStatus("K");
    }

    public void resetPasswordTries() {
        setPasswordTries(new Number(0));
    }
}
