package kz.paysoft.paymobile.ui.pmclient.model.views;

import kz.paysoft.paymobile.ui.adfextensions.ExtendedEntityImpl;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Jun 08 20:42:31 BDST 2010
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ClientsViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getId();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setId((DBSequence)value);
            }
        }
        ,
        Date {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getDate();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setDate((Date)value);
            }
        }
        ,
        User {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getUser();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setUser((String)value);
            }
        }
        ,
        CountryId {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getCountryId();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setCountryId((Number)value);
            }
        }
        ,
        DocTypeId {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getDocTypeId();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setDocTypeId((Number)value);
            }
        }
        ,
        DocId {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getDocId();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        }
        ,
        FromDate {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getFromDate();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setFromDate((Date)value);
            }
        }
        ,
        BranchId {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getBranchId();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setBranchId((Number)value);
            }
        }
        ,
        LastName {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getLastName();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setLastName((String)value);
            }
        }
        ,
        FirstName {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getFirstName();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setFirstName((String)value);
            }
        }
        ,
        BirthDate {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getBirthDate();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setBirthDate((Date)value);
            }
        }
        ,
        DocDate {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getDocDate();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setDocDate((Date)value);
            }
        }
        ,
        DocIssuer {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getDocIssuer();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setDocIssuer((String)value);
            }
        }
        ,
        Address {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getAddress();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setAddress((String)value);
            }
        }
        ,
        MiddleName {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getMiddleName();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setMiddleName((String)value);
            }
        }
        ,
        TaxPayerId {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getTaxPayerId();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setTaxPayerId((String)value);
            }
        }
        ,
        ContractsView {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getContractsView();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Branches {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getBranches();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Countries {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getCountries();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        DocTypes {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getDocTypes();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        Users {
            public Object get(ClientsViewRowImpl obj) {
                return obj.getUsers();
            }

            public void put(ClientsViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ClientsViewRowImpl object);

        public abstract void put(ClientsViewRowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int ID = AttributesEnum.Id.index();
    public static final int DATE = AttributesEnum.Date.index();
    public static final int USER = AttributesEnum.User.index();
    public static final int COUNTRYID = AttributesEnum.CountryId.index();
    public static final int DOCTYPEID = AttributesEnum.DocTypeId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int FROMDATE = AttributesEnum.FromDate.index();
    public static final int BRANCHID = AttributesEnum.BranchId.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int FIRSTNAME = AttributesEnum.FirstName.index();
    public static final int BIRTHDATE = AttributesEnum.BirthDate.index();
    public static final int DOCDATE = AttributesEnum.DocDate.index();
    public static final int DOCISSUER = AttributesEnum.DocIssuer.index();
    public static final int ADDRESS = AttributesEnum.Address.index();
    public static final int MIDDLENAME = AttributesEnum.MiddleName.index();
    public static final int TAXPAYERID = AttributesEnum.TaxPayerId.index();
    public static final int CONTRACTSVIEW = AttributesEnum.ContractsView.index();
    public static final int BRANCHES = AttributesEnum.Branches.index();
    public static final int COUNTRIES = AttributesEnum.Countries.index();
    public static final int DOCTYPES = AttributesEnum.DocTypes.index();
    public static final int USERS = AttributesEnum.Users.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ClientsViewRowImpl() {
    }

    /**
     * Gets Client entity object.
     * @return the Client
     */
    public ExtendedEntityImpl getClient() {
        return (ExtendedEntityImpl)getEntity(0);
    }


    /**
     * Gets the attribute value for ID$ using the alias name Id.
     * @return the ID$
     */
    public DBSequence getId() {
        return (DBSequence)getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID$ using the alias name Id.
     * @param value value to set the ID$
     */
    public void setId(DBSequence value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for DATE$ using the alias name Date.
     * @return the DATE$
     */
    public Date getDate() {
        return (Date) getAttributeInternal(DATE);
    }

    /**
     * Sets <code>value</code> as attribute value for DATE$ using the alias name Date.
     * @param value value to set the DATE$
     */
    public void setDate(Date value) {
        setAttributeInternal(DATE, value);
    }


    /**
     * Gets the attribute value for COUNTRY_ID$ using the alias name CountryId.
     * @return the COUNTRY_ID$
     */
    public Number getCountryId() {
        return (Number) getAttributeInternal(COUNTRYID);
    }

    /**
     * Sets <code>value</code> as attribute value for COUNTRY_ID$ using the alias name CountryId.
     * @param value value to set the COUNTRY_ID$
     */
    public void setCountryId(Number value) {
        setAttributeInternal(COUNTRYID, value);
    }

    /**
     * Gets the attribute value for DOC_TYPE_ID$ using the alias name DocTypeId.
     * @return the DOC_TYPE_ID$
     */
    public Number getDocTypeId() {
        return (Number) getAttributeInternal(DOCTYPEID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_TYPE_ID$ using the alias name DocTypeId.
     * @param value value to set the DOC_TYPE_ID$
     */
    public void setDocTypeId(Number value) {
        setAttributeInternal(DOCTYPEID, value);
    }

    /**
     * Gets the attribute value for DOC_ID using the alias name DocId.
     * @return the DOC_ID
     */
    public String getDocId() {
        return (String) getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ID using the alias name DocId.
     * @param value value to set the DOC_ID
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for FROM_DATE using the alias name FromDate.
     * @return the FROM_DATE
     */
    public Date getFromDate() {
        return (Date) getAttributeInternal(FROMDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for FROM_DATE using the alias name FromDate.
     * @param value value to set the FROM_DATE
     */
    public void setFromDate(Date value) {
        setAttributeInternal(FROMDATE, value);
    }

    /**
     * Gets the attribute value for BRANCH_ID$ using the alias name BranchId.
     * @return the BRANCH_ID$
     */
    public Number getBranchId() {
        return (Number) getAttributeInternal(BRANCHID);
    }

    /**
     * Sets <code>value</code> as attribute value for BRANCH_ID$ using the alias name BranchId.
     * @param value value to set the BRANCH_ID$
     */
    public void setBranchId(Number value) {
        setAttributeInternal(BRANCHID, value);
    }

    /**
     * Gets the attribute value for LAST_NAME using the alias name LastName.
     * @return the LAST_NAME
     */
    public String getLastName() {
        return (String) getAttributeInternal(LASTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_NAME using the alias name LastName.
     * @param value value to set the LAST_NAME
     */
    public void setLastName(String value) {
        setAttributeInternal(LASTNAME, value);
    }

    /**
     * Gets the attribute value for FIRST_NAME using the alias name FirstName.
     * @return the FIRST_NAME
     */
    public String getFirstName() {
        return (String) getAttributeInternal(FIRSTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for FIRST_NAME using the alias name FirstName.
     * @param value value to set the FIRST_NAME
     */
    public void setFirstName(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**
     * Gets the attribute value for BIRTH_DATE using the alias name BirthDate.
     * @return the BIRTH_DATE
     */
    public Date getBirthDate() {
        return (Date) getAttributeInternal(BIRTHDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for BIRTH_DATE using the alias name BirthDate.
     * @param value value to set the BIRTH_DATE
     */
    public void setBirthDate(Date value) {
        setAttributeInternal(BIRTHDATE, value);
    }

    /**
     * Gets the attribute value for DOC_DATE using the alias name DocDate.
     * @return the DOC_DATE
     */
    public Date getDocDate() {
        return (Date) getAttributeInternal(DOCDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_DATE using the alias name DocDate.
     * @param value value to set the DOC_DATE
     */
    public void setDocDate(Date value) {
        setAttributeInternal(DOCDATE, value);
    }

    /**
     * Gets the attribute value for DOC_ISSUER using the alias name DocIssuer.
     * @return the DOC_ISSUER
     */
    public String getDocIssuer() {
        return (String) getAttributeInternal(DOCISSUER);
    }

    /**
     * Sets <code>value</code> as attribute value for DOC_ISSUER using the alias name DocIssuer.
     * @param value value to set the DOC_ISSUER
     */
    public void setDocIssuer(String value) {
        setAttributeInternal(DOCISSUER, value);
    }

    /**
     * Gets the attribute value for ADDRESS using the alias name Address.
     * @return the ADDRESS
     */
    public String getAddress() {
        return (String) getAttributeInternal(ADDRESS);
    }

    /**
     * Sets <code>value</code> as attribute value for ADDRESS using the alias name Address.
     * @param value value to set the ADDRESS
     */
    public void setAddress(String value) {
        setAttributeInternal(ADDRESS, value);
    }

    /**
     * Gets the attribute value for MIDDLE_NAME using the alias name MiddleName.
     * @return the MIDDLE_NAME
     */
    public String getMiddleName() {
        return (String) getAttributeInternal(MIDDLENAME);
    }

    /**
     * Sets <code>value</code> as attribute value for MIDDLE_NAME using the alias name MiddleName.
     * @param value value to set the MIDDLE_NAME
     */
    public void setMiddleName(String value) {
        setAttributeInternal(MIDDLENAME, value);
    }

    /**
     * Gets the attribute value for TAX_PAYER_ID using the alias name TaxPayerId.
     * @return the TAX_PAYER_ID
     */
    public String getTaxPayerId() {
        return (String) getAttributeInternal(TAXPAYERID);
    }

    /**
     * Sets <code>value</code> as attribute value for TAX_PAYER_ID using the alias name TaxPayerId.
     * @param value value to set the TAX_PAYER_ID
     */
    public void setTaxPayerId(String value) {
        setAttributeInternal(TAXPAYERID, value);
    }


    /**
     * Gets the attribute value for USER$ using the alias name User.
     * @return the USER$
     */
    public String getUser() {
        return (String) getAttributeInternal(USER);
    }

    /**
     * Sets <code>value</code> as attribute value for USER$ using the alias name User.
     * @param value value to set the USER$
     */
    public void setUser(String value) {
        setAttributeInternal(USER, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link ContractsView.
     */
    public RowIterator getContractsView() {
        return (RowIterator)getAttributeInternal(CONTRACTSVIEW);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Branches.
     */
    public RowSet getBranches() {
        return (RowSet)getAttributeInternal(BRANCHES);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Countries.
     */
    public RowSet getCountries() {
        return (RowSet)getAttributeInternal(COUNTRIES);
    }

    /**
     * Gets the view accessor <code>RowSet</code> DocTypes.
     */
    public RowSet getDocTypes() {
        return (RowSet)getAttributeInternal(DOCTYPES);
    }

    /**
     * Gets the view accessor <code>RowSet</code> Users.
     */
    public RowSet getUsers() {
        return (RowSet)getAttributeInternal(USERS);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
