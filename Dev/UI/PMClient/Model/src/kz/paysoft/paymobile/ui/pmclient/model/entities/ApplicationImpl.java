package kz.paysoft.paymobile.ui.pmclient.model.entities;

import kz.paysoft.paymobile.ui.pmclient.model.MessageBundle;

import oracle.jbo.JboException;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Jun 06 11:11:26 BDST 2010
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ApplicationImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    @Override
    protected void doDML(int operation, TransactionEvent transactionEvent) {
        if (operation == DML_INSERT) {
            throw new JboException(MessageBundle.class, MessageBundle.OPERATION_NOT_PERMITTED, null);
        }
        super.doDML(operation, transactionEvent);
    }

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        Id {
            public Object get(ApplicationImpl obj) {
                return obj.getId();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        Status {
            public Object get(ApplicationImpl obj) {
                return obj.getStatus();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setStatus((String)value);
            }
        },
        AppliedAt {
            public Object get(ApplicationImpl obj) {
                return obj.getAppliedAt();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        CountryId {
            public Object get(ApplicationImpl obj) {
                return obj.getCountryId();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setCountryId((Number)value);
            }
        },
        DocTypeId {
            public Object get(ApplicationImpl obj) {
                return obj.getDocTypeId();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setDocTypeId((Number)value);
            }
        },
        DocId {
            public Object get(ApplicationImpl obj) {
                return obj.getDocId();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setDocId((String)value);
            }
        },
        PhoneNumber {
            public Object get(ApplicationImpl obj) {
                return obj.getPhoneNumber();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        BranchId {
            public Object get(ApplicationImpl obj) {
                return obj.getBranchId();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setBranchId((Number)value);
            }
        },
        CipherSuite {
            public Object get(ApplicationImpl obj) {
                return obj.getCipherSuite();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        Manager {
            public Object get(ApplicationImpl obj) {
                return obj.getManager();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        ManagerDate {
            public Object get(ApplicationImpl obj) {
                return obj.getManagerDate();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        },
        LastName {
            public Object get(ApplicationImpl obj) {
                return obj.getLastName();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setLastName((String)value);
            }
        },
        FirstName {
            public Object get(ApplicationImpl obj) {
                return obj.getFirstName();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setFirstName((String)value);
            }
        },
        BirthDate {
            public Object get(ApplicationImpl obj) {
                return obj.getBirthDate();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setBirthDate((Date)value);
            }
        },
        DocDate {
            public Object get(ApplicationImpl obj) {
                return obj.getDocDate();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setDocDate((Date)value);
            }
        },
        DocIssuer {
            public Object get(ApplicationImpl obj) {
                return obj.getDocIssuer();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setDocIssuer((String)value);
            }
        },
        Address {
            public Object get(ApplicationImpl obj) {
                return obj.getAddress();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setAddress((String)value);
            }
        },
        MiddleName {
            public Object get(ApplicationImpl obj) {
                return obj.getMiddleName();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setMiddleName((String)value);
            }
        },
        TaxPayerId {
            public Object get(ApplicationImpl obj) {
                return obj.getTaxPayerId();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setTaxPayerId((String)value);
            }
        },
        DeclineReason {
            public Object get(ApplicationImpl obj) {
                return obj.getDeclineReason();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setDeclineReason((String)value);
            }
        },
        AppAccount {
            public Object get(ApplicationImpl obj) {
                return obj.getAppAccount();
            }

            public void put(ApplicationImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        };
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(ApplicationImpl object);

        public abstract void put(ApplicationImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ID = AttributesEnum.Id.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int APPLIEDAT = AttributesEnum.AppliedAt.index();
    public static final int COUNTRYID = AttributesEnum.CountryId.index();
    public static final int DOCTYPEID = AttributesEnum.DocTypeId.index();
    public static final int DOCID = AttributesEnum.DocId.index();
    public static final int PHONENUMBER = AttributesEnum.PhoneNumber.index();
    public static final int BRANCHID = AttributesEnum.BranchId.index();
    public static final int CIPHERSUITE = AttributesEnum.CipherSuite.index();
    public static final int MANAGER = AttributesEnum.Manager.index();
    public static final int MANAGERDATE = AttributesEnum.ManagerDate.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int FIRSTNAME = AttributesEnum.FirstName.index();
    public static final int BIRTHDATE = AttributesEnum.BirthDate.index();
    public static final int DOCDATE = AttributesEnum.DocDate.index();
    public static final int DOCISSUER = AttributesEnum.DocIssuer.index();
    public static final int ADDRESS = AttributesEnum.Address.index();
    public static final int MIDDLENAME = AttributesEnum.MiddleName.index();
    public static final int TAXPAYERID = AttributesEnum.TaxPayerId.index();
    public static final int DECLINEREASON = AttributesEnum.DeclineReason.index();
    public static final int APPACCOUNT = AttributesEnum.AppAccount.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ApplicationImpl() {
    }

    /**
     * Gets the attribute value for Id, using the alias name Id.
     * @return the Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the Status
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for AppliedAt, using the alias name AppliedAt.
     * @return the AppliedAt
     */
    public Date getAppliedAt() {
        return (Date)getAttributeInternal(APPLIEDAT);
    }

    /**
     * Gets the attribute value for CountryId, using the alias name CountryId.
     * @return the CountryId
     */
    public Number getCountryId() {
        return (Number)getAttributeInternal(COUNTRYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CountryId.
     * @param value value to set the CountryId
     */
    public void setCountryId(Number value) {
        setAttributeInternal(COUNTRYID, value);
    }

    /**
     * Gets the attribute value for DocTypeId, using the alias name DocTypeId.
     * @return the DocTypeId
     */
    public Number getDocTypeId() {
        return (Number)getAttributeInternal(DOCTYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocTypeId.
     * @param value value to set the DocTypeId
     */
    public void setDocTypeId(Number value) {
        setAttributeInternal(DOCTYPEID, value);
    }

    /**
     * Gets the attribute value for DocId, using the alias name DocId.
     * @return the DocId
     */
    public String getDocId() {
        return (String)getAttributeInternal(DOCID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocId.
     * @param value value to set the DocId
     */
    public void setDocId(String value) {
        setAttributeInternal(DOCID, value);
    }

    /**
     * Gets the attribute value for PhoneNumber, using the alias name PhoneNumber.
     * @return the PhoneNumber
     */
    public Number getPhoneNumber() {
        return (Number)getAttributeInternal(PHONENUMBER);
    }

    /**
     * Gets the attribute value for BranchId, using the alias name BranchId.
     * @return the BranchId
     */
    public Number getBranchId() {
        return (Number)getAttributeInternal(BRANCHID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BranchId.
     * @param value value to set the BranchId
     */
    public void setBranchId(Number value) {
        setAttributeInternal(BRANCHID, value);
    }

    /**
     * Gets the attribute value for CipherSuite, using the alias name CipherSuite.
     * @return the CipherSuite
     */
    public String getCipherSuite() {
        return (String)getAttributeInternal(CIPHERSUITE);
    }

    /**
     * Gets the attribute value for Manager, using the alias name Manager.
     * @return the Manager
     */
    public String getManager() {
        return (String)getAttributeInternal(MANAGER);
    }

    /**
     * Gets the attribute value for ManagerDate, using the alias name ManagerDate.
     * @return the ManagerDate
     */
    public Date getManagerDate() {
        return (Date)getAttributeInternal(MANAGERDATE);
    }

    /**
     * Gets the attribute value for LastName, using the alias name LastName.
     * @return the LastName
     */
    public String getLastName() {
        return (String)getAttributeInternal(LASTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastName.
     * @param value value to set the LastName
     */
    public void setLastName(String value) {
        setAttributeInternal(LASTNAME, value);
    }

    /**
     * Gets the attribute value for FirstName, using the alias name FirstName.
     * @return the FirstName
     */
    public String getFirstName() {
        return (String)getAttributeInternal(FIRSTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for FirstName.
     * @param value value to set the FirstName
     */
    public void setFirstName(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**
     * Gets the attribute value for BirthDate, using the alias name BirthDate.
     * @return the BirthDate
     */
    public Date getBirthDate() {
        return (Date)getAttributeInternal(BIRTHDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for BirthDate.
     * @param value value to set the BirthDate
     */
    public void setBirthDate(Date value) {
        setAttributeInternal(BIRTHDATE, value);
    }

    /**
     * Gets the attribute value for DocDate, using the alias name DocDate.
     * @return the DocDate
     */
    public Date getDocDate() {
        return (Date)getAttributeInternal(DOCDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDate.
     * @param value value to set the DocDate
     */
    public void setDocDate(Date value) {
        setAttributeInternal(DOCDATE, value);
    }

    /**
     * Gets the attribute value for DocIssuer, using the alias name DocIssuer.
     * @return the DocIssuer
     */
    public String getDocIssuer() {
        return (String)getAttributeInternal(DOCISSUER);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocIssuer.
     * @param value value to set the DocIssuer
     */
    public void setDocIssuer(String value) {
        setAttributeInternal(DOCISSUER, value);
    }

    /**
     * Gets the attribute value for Address, using the alias name Address.
     * @return the Address
     */
    public String getAddress() {
        return (String)getAttributeInternal(ADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Address.
     * @param value value to set the Address
     */
    public void setAddress(String value) {
        setAttributeInternal(ADDRESS, value);
    }

    /**
     * Gets the attribute value for MiddleName, using the alias name MiddleName.
     * @return the MiddleName
     */
    public String getMiddleName() {
        return (String)getAttributeInternal(MIDDLENAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for MiddleName.
     * @param value value to set the MiddleName
     */
    public void setMiddleName(String value) {
        setAttributeInternal(MIDDLENAME, value);
    }

    /**
     * Gets the attribute value for TaxPayerId, using the alias name TaxPayerId.
     * @return the TaxPayerId
     */
    public String getTaxPayerId() {
        return (String)getAttributeInternal(TAXPAYERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TaxPayerId.
     * @param value value to set the TaxPayerId
     */
    public void setTaxPayerId(String value) {
        setAttributeInternal(TAXPAYERID, value);
    }

    /**
     * Gets the attribute value for DeclineReason, using the alias name DeclineReason.
     * @return the DeclineReason
     */
    public String getDeclineReason() {
        return (String)getAttributeInternal(DECLINEREASON);
    }

    /**
     * Sets <code>value</code> as the attribute value for DeclineReason.
     * @param value value to set the DeclineReason
     */
    public void setDeclineReason(String value) {
        setAttributeInternal(DECLINEREASON, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getAppAccount() {
        return (RowIterator)getAttributeInternal(APPACCOUNT);
    }

    /**
     * @param id key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number id) {
        return new Key(new Object[] { id });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("kz.paysoft.paymobile.ui.pmclient.model.entities.Application");
        }
        return mDefinitionObject;
    }


    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        //super.remove();
        throw new JboException(MessageBundle.class, MessageBundle.OPERATION_NOT_PERMITTED, null);
    }

}
